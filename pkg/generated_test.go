package openapiart_test

import (
	"log"
	"testing"

	openapiart "github.com/open-traffic-generator/openapiart/pkg"
)

func TestConfigGenerated(t *testing.T) {
	api := openapiart.NewApi()
	config := api.NewPrefixConfig()

	config.SetIeee8021Qbb(true).SetSpace1(1).SetFullDuplex100Mb(1).SetA("abc").SetB(100.11).SetC(1).SetH(true).SetI([]byte{1, 0, 0, 1, 0, 0, 1, 1}).SetListOfStringValues([]string{"a", "b", "c"}).SetListOfIntegerValues([]int32{1, 2, 3}).SetInteger64(100000000).SetName("abc")
	config.RequiredObject().SetEA(100.11).SetEB(1.7976931348623157e+308).SetName("abc").SetMParam1("abc").SetMParam2("abc")
	config.RequiredObject().ToJson()
	config.RequiredObject().ToYaml()
	config.RequiredObject().ToPbText()
	config.OptionalObject().SetEA(100.11).SetEB(1.7976931348623157e+308).SetName("abc").SetMParam1("abc").SetMParam2("abc")
	config.OptionalObject().ToJson()
	config.OptionalObject().ToYaml()
	config.OptionalObject().ToPbText()
	config.E().SetEA(100.11).SetEB(1.7976931348623157e+308).SetName("abc").SetMParam1("abc").SetMParam2("abc")
	config.E().ToJson()
	config.E().ToYaml()
	config.E().ToPbText()
	config.F().SetFA("abc").SetFB(1.7976931348623157e+308)
	config.F().ToJson()
	config.F().ToYaml()
	config.F().ToPbText()
	v9 := config.G().Add()
	v9.SetGA("abc").SetGB(1).SetGC(100.11).SetGD("abc").SetGE(1.7976931348623157e+308).SetName("abc")
	v9.GA()
	v9.GB()
	v9.GC()
	v9.GD()
	v9.GE()
	v9.Name()
	v9.ToJson()
	v9.ToYaml()
	v9.ToPbText()
	v11 := config.J().Add()
	v11.JA().SetEA(100.11).SetEB(1.7976931348623157e+308).SetName("abc").SetMParam1("abc").SetMParam2("abc")
	v11.JA().ToJson()
	v11.JA().ToYaml()
	v11.JA().ToPbText()
	v11.JB().SetFA("abc").SetFB(1.7976931348623157e+308)
	v11.JB().ToJson()
	v11.JB().ToYaml()
	v11.JB().ToPbText()
	v11.JA().EA()
	v11.JA().EB()
	v11.JA().Name()
	v11.JA().MParam1()
	v11.JA().MParam2()
	v11.JB().FA()
	v11.JB().FB()
	v11.ToJson()
	v11.ToYaml()
	v11.ToPbText()
	config.K()
	config.K().EObject().SetEA(100.11).SetEB(1.7976931348623157e+308).SetName("abc").SetMParam1("abc").SetMParam2("abc")
	config.K().EObject().ToJson()
	config.K().EObject().ToYaml()
	config.K().EObject().ToPbText()
	config.K().FObject().SetFA("abc").SetFB(1.7976931348623157e+308)
	config.K().FObject().ToJson()
	config.K().FObject().ToYaml()
	config.K().FObject().ToPbText()
	config.K().ToJson()
	config.K().ToYaml()
	config.K().ToPbText()
	config.L().SetString("abc").SetInteger(50).SetFloat(100.11).SetDouble(1.7976931348623157e+308).SetMac("00:00:00:00:00:0a").SetIpv4("1.1.1.1").SetIpv6("2000::1").SetHex("0x12")
	config.L().ToJson()
	config.L().ToYaml()
	config.L().ToPbText()
	config.Level()
	config.Level().L1P1()
	config.Level().L1P1().L2P1().SetL3P1("abc")
	config.Level().L1P1().L2P1().ToJson()
	config.Level().L1P1().L2P1().ToYaml()
	config.Level().L1P1().L2P1().ToPbText()
	config.Level().L1P1().ToJson()
	config.Level().L1P1().ToYaml()
	config.Level().L1P1().ToPbText()
	config.Level().ToJson()
	config.Level().ToYaml()
	config.Level().ToPbText()
	config.Mandatory().SetRequiredParam("abc")
	config.Mandatory().ToJson()
	config.Mandatory().ToYaml()
	config.Mandatory().ToPbText()
	config.Ipv4Pattern()
	config.Ipv4Pattern().Ipv4().SetValue("1.1.1.1").SetValues([]string{"1.1.1.1"})
	config.Ipv4Pattern().Ipv4().Increment().SetStart("1.1.1.1").SetStep("1.1.1.1").SetCount(1)
	config.Ipv4Pattern().Ipv4().Increment().ToJson()
	config.Ipv4Pattern().Ipv4().Increment().ToYaml()
	config.Ipv4Pattern().Ipv4().Increment().ToPbText()
	config.Ipv4Pattern().Ipv4().Decrement().SetStart("1.1.1.1").SetStep("1.1.1.1").SetCount(1)
	config.Ipv4Pattern().Ipv4().Decrement().ToJson()
	config.Ipv4Pattern().Ipv4().Decrement().ToYaml()
	config.Ipv4Pattern().Ipv4().Decrement().ToPbText()
	config.Ipv4Pattern().Ipv4().ToJson()
	config.Ipv4Pattern().Ipv4().ToYaml()
	config.Ipv4Pattern().Ipv4().ToPbText()
	config.Ipv4Pattern().ToJson()
	config.Ipv4Pattern().ToYaml()
	config.Ipv4Pattern().ToPbText()
	config.Ipv6Pattern()
	config.Ipv6Pattern().Ipv6().SetValue("2000::1").SetValues([]string{"2000::1"})
	config.Ipv6Pattern().Ipv6().Increment().SetStart("2000::1").SetStep("2000::1").SetCount(1)
	config.Ipv6Pattern().Ipv6().Increment().ToJson()
	config.Ipv6Pattern().Ipv6().Increment().ToYaml()
	config.Ipv6Pattern().Ipv6().Increment().ToPbText()
	config.Ipv6Pattern().Ipv6().Decrement().SetStart("2000::1").SetStep("2000::1").SetCount(1)
	config.Ipv6Pattern().Ipv6().Decrement().ToJson()
	config.Ipv6Pattern().Ipv6().Decrement().ToYaml()
	config.Ipv6Pattern().Ipv6().Decrement().ToPbText()
	config.Ipv6Pattern().Ipv6().ToJson()
	config.Ipv6Pattern().Ipv6().ToYaml()
	config.Ipv6Pattern().Ipv6().ToPbText()
	config.Ipv6Pattern().ToJson()
	config.Ipv6Pattern().ToYaml()
	config.Ipv6Pattern().ToPbText()
	config.MacPattern()
	config.MacPattern().Mac().SetValue("00:00:00:00:00:0a").SetValues([]string{"00:00:00:00:00:0a"})
	config.MacPattern().Mac().Increment().SetStart("00:00:00:00:00:0a").SetStep("00:00:00:00:00:0a").SetCount(1)
	config.MacPattern().Mac().Increment().ToJson()
	config.MacPattern().Mac().Increment().ToYaml()
	config.MacPattern().Mac().Increment().ToPbText()
	config.MacPattern().Mac().Decrement().SetStart("00:00:00:00:00:0a").SetStep("00:00:00:00:00:0a").SetCount(1)
	config.MacPattern().Mac().Decrement().ToJson()
	config.MacPattern().Mac().Decrement().ToYaml()
	config.MacPattern().Mac().Decrement().ToPbText()
	config.MacPattern().Mac().ToJson()
	config.MacPattern().Mac().ToYaml()
	config.MacPattern().Mac().ToPbText()
	config.MacPattern().ToJson()
	config.MacPattern().ToYaml()
	config.MacPattern().ToPbText()
	config.IntegerPattern()
	config.IntegerPattern().Integer().SetValue(160).SetValues([]int32{86})
	config.IntegerPattern().Integer().Increment().SetStart(87).SetStep(58).SetCount(1)
	config.IntegerPattern().Integer().Increment().ToJson()
	config.IntegerPattern().Integer().Increment().ToYaml()
	config.IntegerPattern().Integer().Increment().ToPbText()
	config.IntegerPattern().Integer().Decrement().SetStart(96).SetStep(142).SetCount(1)
	config.IntegerPattern().Integer().Decrement().ToJson()
	config.IntegerPattern().Integer().Decrement().ToYaml()
	config.IntegerPattern().Integer().Decrement().ToPbText()
	config.IntegerPattern().Integer().ToJson()
	config.IntegerPattern().Integer().ToYaml()
	config.IntegerPattern().Integer().ToPbText()
	config.IntegerPattern().ToJson()
	config.IntegerPattern().ToYaml()
	config.IntegerPattern().ToPbText()
	config.ChecksumPattern()
	config.ChecksumPattern().Checksum().SetCustom(50)
	config.ChecksumPattern().Checksum().ToJson()
	config.ChecksumPattern().Checksum().ToYaml()
	config.ChecksumPattern().Checksum().ToPbText()
	config.ChecksumPattern().ToJson()
	config.ChecksumPattern().ToYaml()
	config.ChecksumPattern().ToPbText()
	config.MObject().SetString("abc").SetInteger(50).SetFloat(100.11).SetDouble(1.7976931348623157e+308).SetMac("00:00:00:00:00:0a").SetIpv4("1.1.1.1").SetIpv6("2000::1").SetHex("0x12")
	config.MObject().ToJson()
	config.MObject().ToYaml()
	config.MObject().ToPbText()
	config.RequiredObject().EA()
	config.RequiredObject().EB()
	config.RequiredObject().Name()
	config.RequiredObject().MParam1()
	config.RequiredObject().MParam2()
	config.OptionalObject().EA()
	config.OptionalObject().EB()
	config.OptionalObject().Name()
	config.OptionalObject().MParam1()
	config.OptionalObject().MParam2()
	config.Ieee8021Qbb()
	config.Space1()
	config.FullDuplex100Mb()
	config.A()
	config.B()
	config.C()
	config.E().EA()
	config.E().EB()
	config.E().Name()
	config.E().MParam1()
	config.E().MParam2()
	config.F().FA()
	config.F().FB()
	config.H()
	config.I()
	config.K().EObject().EA()
	config.K().EObject().EB()
	config.K().EObject().Name()
	config.K().EObject().MParam1()
	config.K().EObject().MParam2()
	config.K().FObject().FA()
	config.K().FObject().FB()
	config.L().String()
	config.L().Integer()
	config.L().Float()
	config.L().Double()
	config.L().Mac()
	config.L().Ipv4()
	config.L().Ipv6()
	config.L().Hex()
	config.ListOfStringValues()
	config.ListOfIntegerValues()
	config.Level().L1P1().L2P1().L3P1()
	config.Mandatory().RequiredParam()
	config.Ipv4Pattern().Ipv4().Value()
	config.Ipv4Pattern().Ipv4().Values()
	config.Ipv4Pattern().Ipv4().Increment().Start()
	config.Ipv4Pattern().Ipv4().Increment().Step()
	config.Ipv4Pattern().Ipv4().Increment().Count()
	config.Ipv4Pattern().Ipv4().Decrement().Start()
	config.Ipv4Pattern().Ipv4().Decrement().Step()
	config.Ipv4Pattern().Ipv4().Decrement().Count()
	config.Ipv6Pattern().Ipv6().Value()
	config.Ipv6Pattern().Ipv6().Values()
	config.Ipv6Pattern().Ipv6().Increment().Start()
	config.Ipv6Pattern().Ipv6().Increment().Step()
	config.Ipv6Pattern().Ipv6().Increment().Count()
	config.Ipv6Pattern().Ipv6().Decrement().Start()
	config.Ipv6Pattern().Ipv6().Decrement().Step()
	config.Ipv6Pattern().Ipv6().Decrement().Count()
	config.MacPattern().Mac().Value()
	config.MacPattern().Mac().Values()
	config.MacPattern().Mac().Increment().Start()
	config.MacPattern().Mac().Increment().Step()
	config.MacPattern().Mac().Increment().Count()
	config.MacPattern().Mac().Decrement().Start()
	config.MacPattern().Mac().Decrement().Step()
	config.MacPattern().Mac().Decrement().Count()
	config.IntegerPattern().Integer().Value()
	config.IntegerPattern().Integer().Values()
	config.IntegerPattern().Integer().Increment().Start()
	config.IntegerPattern().Integer().Increment().Step()
	config.IntegerPattern().Integer().Increment().Count()
	config.IntegerPattern().Integer().Decrement().Start()
	config.IntegerPattern().Integer().Decrement().Step()
	config.IntegerPattern().Integer().Decrement().Count()
	config.ChecksumPattern().Checksum().Custom()
	config.MObject().String()
	config.MObject().Integer()
	config.MObject().Float()
	config.MObject().Double()
	config.MObject().Mac()
	config.MObject().Ipv4()
	config.MObject().Ipv6()
	config.MObject().Hex()
	config.Integer64()
	config.Name()
	log.Print(config.ToJson())
	log.Print(config.ToYaml())
	log.Print(config.ToPbText())
}
