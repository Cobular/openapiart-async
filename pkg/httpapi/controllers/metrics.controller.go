// This file is autogenerated. Do not modify
package controllers

import (
	"net/http"
	"github.com/open-traffic-generator/openapiart/pkg/httpapi"
	"github.com/open-traffic-generator/openapiart/pkg/httpapi/interfaces"
)

type metricsController struct {
	handler interfaces.MetricsHandler
}

func NewHttpMetricsController(handler interfaces.MetricsHandler) interfaces.MetricsController {
	return &metricsController{handler}
}

func (ctrl *metricsController) Routes() []httpapi.Route {
	return [] httpapi.Route {
		{ Path: "/metrics", Method: "GET", Name: "GetMetrics", Handler: ctrl.GetMetrics},
		{ Path: "/warnings", Method: "GET", Name: "GetWarnings", Handler: ctrl.GetWarnings},
		{ Path: "/warnings", Method: "DELETE", Name: "ClearWarnings", Handler: ctrl.ClearWarnings},
	}
}

/*
GetMetrics: GET /metrics
Description: Gets metrics.
*/
func (ctrl *metricsController) GetMetrics(w http.ResponseWriter, r *http.Request) {
	result := ctrl.handler.GetMetrics(r)
	if result.HasStatusCode200() {
		httpapi.WriteJSONResponse(w, 200, result.StatusCode200())
		return
	}
	httpapi.WriteDefaultResponse(w, http.StatusInternalServerError)
}

/*
GetWarnings: GET /warnings
Description: Gets warnings.
*/
func (ctrl *metricsController) GetWarnings(w http.ResponseWriter, r *http.Request) {
	result := ctrl.handler.GetWarnings(r)
	if result.HasStatusCode200() {
		httpapi.WriteJSONResponse(w, 200, result.StatusCode200())
		return
	}
	httpapi.WriteDefaultResponse(w, http.StatusInternalServerError)
}

/*
ClearWarnings: DELETE /warnings
Description: Clears warnings.
*/
func (ctrl *metricsController) ClearWarnings(w http.ResponseWriter, r *http.Request) {
	result := ctrl.handler.ClearWarnings(r)
	if result.HasStatusCode200() {
		httpapi.WriteJSONResponse(w, 200, result.StatusCode200())
		return
	}
	httpapi.WriteDefaultResponse(w, http.StatusInternalServerError)
}

