// This file is autogenerated. Do not modify
package controllers

import (
	"net/http"
	"github.com/open-traffic-generator/openapiart/pkg/httpapi"
	"github.com/open-traffic-generator/openapiart/pkg/httpapi/interfaces"
)

type bundlerController struct {
	handler interfaces.BundlerHandler
}

func NewHttpBundlerController(handler interfaces.BundlerHandler) interfaces.BundlerController {
	return &bundlerController{handler}
}

func (ctrl *bundlerController) Routes() []httpapi.Route {
	return [] httpapi.Route {
		{ Path: "/config", Method: "POST", Name: "SetConfig", Handler: ctrl.SetConfig},
		{ Path: "/config", Method: "PATCH", Name: "UpdateConfig", Handler: ctrl.UpdateConfig},
		{ Path: "/config", Method: "GET", Name: "GetConfig", Handler: ctrl.GetConfig},
	}
}

/*
SetConfig: POST /config
Description: Sets configuration resources.
*/
func (ctrl *bundlerController) SetConfig(w http.ResponseWriter, r *http.Request) {
	result := ctrl.handler.SetConfig(r)
	if result.HasStatusCode200() {
		httpapi.WriteJSONResponse(w, 200, result.StatusCode200())
		return
	}
	if result.HasStatusCode400() {
		httpapi.WriteJSONResponse(w, 400, result.StatusCode400())
		return
	}
	if result.HasStatusCode500() {
		httpapi.WriteJSONResponse(w, 500, result.StatusCode500())
		return
	}
	httpapi.WriteDefaultResponse(w, http.StatusInternalServerError)
}

/*
UpdateConfig: PATCH /config
Description: Sets configuration resources.
*/
func (ctrl *bundlerController) UpdateConfig(w http.ResponseWriter, r *http.Request) {
	result := ctrl.handler.UpdateConfig(r)
	if result.HasStatusCode200() {
		httpapi.WriteJSONResponse(w, 200, result.StatusCode200())
		return
	}
	if result.HasStatusCode400() {
		httpapi.WriteJSONResponse(w, 400, result.StatusCode400())
		return
	}
	if result.HasStatusCode500() {
		httpapi.WriteJSONResponse(w, 500, result.StatusCode500())
		return
	}
	httpapi.WriteDefaultResponse(w, http.StatusInternalServerError)
}

/*
GetConfig: GET /config
Description: Gets the configuration resources.
*/
func (ctrl *bundlerController) GetConfig(w http.ResponseWriter, r *http.Request) {
	result := ctrl.handler.GetConfig(r)
	if result.HasStatusCode200() {
		httpapi.WriteJSONResponse(w, 200, result.StatusCode200())
		return
	}
	httpapi.WriteDefaultResponse(w, http.StatusInternalServerError)
}

